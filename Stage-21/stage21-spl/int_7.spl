[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 5;

alias userSP R0;
userSP = SP;

[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16)+13]=SP;
SP=[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE+1]*16) + 11]*512-1;


alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;
physicalPageNum = [PTBR + 2 * ((userSP - 4)/ 512)];
offset = (userSP - 4) % 512;
fileDescPhysicalAddr = (physicalPageNum * 512) + offset;
alias fileDescriptor R4;
fileDescriptor=[fileDescPhysicalAddr];



if (fileDescriptor != -2)
then
   alias physicalAddrRetVal R5;
   physicalAddrRetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
   [physicalAddrRetVal] = -1;
else
   alias word R5;
  word = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];
  //print word;

  //Code for S15
  multipush(R0,R1,R2,R3,R4,R5);
  alias func_num R1;
  alias pid R2;
  alias word_print R3;

  func_num=3;
  pid=[SYSTEM_STATUS_TABLE + 1];
  word_print=word;

  //call to device manager.
  call DEVICE_MANAGER;

  multipop(R0,R1,R2,R3,R4,R5);

  alias physicalAddrRetVal R6;
  physicalAddrRetVal = ([PTBR + 2 * (userSP - 1)/ 512] * 512) + ((userSP - 1) % 512);
  [physicalAddrRetVal] = 0;
endif;

SP=userSP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;

ireturn;
